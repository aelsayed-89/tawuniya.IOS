struct ContentView: View {
    @StateObject private var viewModel = APIViewModel()

    var body: some View {
        NavigationView {
            VStack {
                if viewModel.isLoading {
                    ProgressView("Loading...")
                        .progressViewStyle(CircularProgressViewStyle())
                } else if let errorMessage = viewModel.errorMessage {
                    Text(errorMessage)
                        .foregroundColor(.red)
                        .padding()
                } else {
                    ScrollView {
                        VStack(spacing: 10) {
                            ForEach(viewModel.users) { user in
                                VStack(alignment: .leading) {
                                    Text("ID: \(user.id)")
                                        .font(.subheadline)
                                        .foregroundColor(.gray)
                                    Text("Name: \(user.name)")
                                        .font(.headline)
                                    Text("Username: \(user.username)")
                                        .font(.subheadline)
                                        .foregroundColor(.blue)
                                    Text("Email: \(user.email)")
                                        .font(.subheadline)
                                        .foregroundColor(.green)
                                    
                                    VStack(alignment: .leading) {
                                        Text("Address:")
                                            .font(.headline)
                                        Text("Street: \(user.address.street)")
                                        Text("Suite: \(user.address.suite)")
                                        Text("City: \(user.address.city)")
                                        Text("Zipcode: \(user.address.zipcode)")
                                        Text("Latitude: \(user.address.geo.lat), Longitude: \(user.address.geo.lng)")
                                    }
                                    .padding(.top)
                                    
                                    Text("Phone: \(user.phone)")
                                        .font(.subheadline)
                                    Text("Website: \(user.website)")
                                        .font(.subheadline)
                                    
                                    VStack(alignment: .leading) {
                                        Text("Company:")
                                            .font(.headline)
                                        Text("Name: \(user.company.name)")
                                        Text("Catch Phrase: \(user.company.catchPhrase)")
                                        Text("BS: \(user.company.bs)")
                                    }
                                    .padding(.top)
                                    
                                    // 7. زر Like
                                    Button(action: {
                                        viewModel.toggleLike(userId: user.id)
                                    }) {
                                        HStack {
                                            Image(systemName: viewModel.isLiked(userId: user.id) ? "heart.fill" : "heart")
                                                .foregroundColor(viewModel.isLiked(userId: user.id) ? .red : .gray)
                                            Text(viewModel.isLiked(userId: user.id) ? "Liked" : "Like")
                                                .foregroundColor(viewModel.isLiked(userId: user.id) ? .red : .blue)
                                        }
                                        .padding()
                                        .background(RoundedRectangle(cornerRadius: 10).fill(Color.white).shadow(radius: 5))
                                    }
                                    .padding(.top)
                                }
                                .padding()
                                .background(RoundedRectangle(cornerRadius: 10).fill(Color.white).shadow(radius: 5))
                                .padding(.bottom, 10)
                            }
                        }
                        .padding()
                    }
                }
            }
            .onAppear {
                viewModel.fetchData()
            }
            .navigationTitle("Users List")
        }
    }
}
_______________________________________________________________________________________
func toggleLike(userId: Int) {
    let isCurrentlyLiked = isLiked(userId: userId)
    print("Current Like State: \(isCurrentlyLiked)")
    UserDefaults.standard.set(!isCurrentlyLiked, forKey: "likedUser\(userId)")
    print("New Like State: \(!isCurrentlyLiked)")
}
